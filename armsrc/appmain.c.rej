--- armsrc/appmain.c
+++ armsrc/appmain.c
@@ -338,6 +338,85 @@ void SendVersion(void)
 }
 
 #ifdef WITH_LF
+
+// Function that calculate next value for the brutforce of HID corporate 1000
+void hid_corporate_1000_calculate_checksum_and_set(int* high, int* low, uint32_t cardnum, uint32_t fc) {
+
+	uint32_t new_high = 0;
+	uint32_t new_low = 0;	
+
+	//DbpString("Calculating new high and low");
+	// Calculate new high and low base value from card number and facility code, without parity
+	new_low = (fc << 21) | (cardnum << 1); 
+	new_high = 0x28 | ((fc >> 11) & 1); // 0x28 is 101000
+
+	int n_ones;
+	uint32_t i;
+	
+	//DbpString("Calculating parity bit 34");
+	// Calculating and setting parity bit 34
+	// Select only bit used for parity bit 34 in low number (10110110110110110110110110110110)
+	uint32_t parity_bit_34_low = new_low & 0xB6DB6DB6;
+	n_ones = 0;
+	// Calculate number of ones in low number
+	for(i=0x1;i!=0;i<<=0x1) {
+		if( parity_bit_34_low & i )
+			n_ones++;
+	}
+	// Calculate number of ones in high number
+	if( new_high & 1)
+		n_ones++;
+	// Set parity bit (Even parity)
+	if(n_ones % 2)
+		new_high = new_high | 0x2;
+
+	//DbpString("Calculating parity bit 1");	
+	// Calculating and setting parity bit 1
+	// Select only bit used for parity bit 1 in low number (01101101101101101101101101101100)
+	uint32_t parity_bit_1_low = new_low & 0x6DB6DB6C;
+	n_ones = 0;
+	// Calculate number of ones in low number
+	for(i=0x1;i!=0;i<<=1) {
+		if( parity_bit_1_low & i )
+			n_ones++;
+	}
+	// Calculate number of ones in high number
+	if( new_high & 0x1)
+		n_ones++;
+	if( new_high & 0x2)
+		n_ones++;
+	// Set parity bit (Odd parity)
+	if(!(n_ones % 2))
+		new_low = new_low | 0x1;
+
+	
+	//DbpString("Calculating parity bit 35");
+	// Calculating and setting parity bit 35
+	n_ones = 0;
+	// Calculate number of ones in low number (all bit of low, bitmask unnecessary)
+	for(i=0x1;i!=0;i<<=1) {
+		if( new_low & i )
+			n_ones++;
+	}
+	// Calculate number of ones in high number
+	if( new_high & 0x1)
+		n_ones++;
+	if( new_high & 0x2)
+		n_ones++;
+	// Set parity bit (Odd parity)
+	if(!(n_ones % 2))
+		new_high = new_high | 0x4;
+
+	//DbpString("Setting new values");
+	// Setting new calculated values
+	*low = (int)new_low;
+	*high = (int)new_high;
+
+	//DbpString("Done");
+
+}
+
+
 // samy's sniff and repeat routine
 void SamyRun()
 {
@@ -345,7 +424,7 @@ void SamyRun()
 	FpgaDownloadAndGo(FPGA_BITSTREAM_LF);
 
 	// 3 possible options? no just 2 for now
-#define OPTS 2
+#define OPTS 3
 
 	int high[OPTS], low[OPTS];
 
